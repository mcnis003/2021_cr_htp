#!/usr/bin/env bash

# use "../../scripts/bash/extract_data_from_orthophotos_vc"

echo ""
echo "*****begin plot data extraction*****"


# function to create directories

create_directory(){
    if [ ! -d "$1" ]; then
	echo "creating new $1 directory"
	mkdir $1
    fi
}

delete_directory(){
    if [ -d "$1" ]; then
	echo "deleting old $1 directory"
	rm -rf $1
    fi
}

# 1. delete final data folder if it exists and create new folder

delete_directory final_orthomosaic_data
create_directory final_orthomosaic_data

# 2. crop and copy orthophotos into new folder

#make world file for classification photo
cp rgb_autoexposure_calibration/odm_orthophoto.wld rgb_autoexposure_calibration/orthophoto_classified.wld

#crop and transfer all 5 photos
/usr/local/bin/gdal_translate -scale -co worldfile=yes -projwin 485298.5104 4981808.868 485397.5544 4981784.068 rgb_autoexposure_calibration/orthophoto_classified.tif final_orthomosaic_data/orthophoto_classified_cropped.tif

#/usr/local/bin/gdal_translate -scale -co worldfile=yes -projwin 485298.5104 4981808.868 485397.5544 4981784.068 655nm_autoexposure_calibration/odm_orthophoto.tif final_orthomosaic_data/655nm_orthophoto_cropped.tif

/usr/local/bin/gdal_translate -scale -co worldfile=yes -projwin 485298.5104 4981808.868 485397.5544 4981784.068 725nm_autoexposure_calibration/odm_orthophoto.tif final_orthomosaic_data/725nm_orthophoto_cropped.tif

/usr/local/bin/gdal_translate -scale -co worldfile=yes -projwin 485298.5104 4981808.868 485397.5544 4981784.068 800nm_autoexposure_calibration/odm_orthophoto.tif final_orthomosaic_data/800nm_orthophoto_cropped.tif

/usr/local/bin/gdal_translate -scale -co worldfile=yes -projwin 485298.5104 4981808.868 485397.5544 4981784.068 rgb_autoexposure_calibration/odm_orthophoto.tif final_orthomosaic_data/rgb_orthophoto_cropped.tif

directories=( "rgb_autoexposure_calibration_control_panels" "655nm_autoexposure_calibration_control_panels" "725nm_autoexposure_calibration_control_panels" "800nm_autoexposure_calibration_control_panels" )

# if control panel result file exists, delete it

if [ -f "gcp_lists/control_panel_results.csv" ]; then
    echo "deleting old control panel result file"
    rm -rf "gcp_lists/control_panel_results.csv"
fi
# if directories already exist, delete them, then create directories for results if they do not exist

echo "produce calibration directories\n"

for i in "${directories[@]}"; do
    delete_directory $i
done

for i in "${directories[@]}"; do
    create_directory $i
done

# produce .jpg and .wld files for each channel

echo "produce .jpg and .wld files for each channel"

gdal_translate -of JPEG -scale -co worldfile=yes rgb_autoexposure_calibration/odm_orthophoto.tif rgb_autoexposure_calibration/odm_orthophoto.jpg
#gdal_translate -of JPEG -scale -co worldfile=yes 655nm_autoexposure_calibration/odm_orthophoto.tif 655nm_autoexposure_calibration/odm_orthophoto.jpg
gdal_translate -of JPEG -scale -co worldfile=yes 725nm_autoexposure_calibration/odm_orthophoto.tif 725nm_autoexposure_calibration/odm_orthophoto.jpg
gdal_translate -of JPEG -scale -co worldfile=yes 800nm_autoexposure_calibration/odm_orthophoto.tif 800nm_autoexposure_calibration/odm_orthophoto.jpg

# crop photos for each control panel
/usr/local/bin/Rscript ../../scripts/r/crop_orthomosaic_files_vc.R --vanilla

echo "*****finish control panel calibration\n*****"
echo "\n"

# search for control panel

for i in "${directories[@]}"; do
    
    for ii in $i/*; do
	
	../../scripts/cpp/find_control_panel/Build/Debug/find_control_panel $ii ../../ground_control_panels/control_panel_templates/${i:0:3}.jpg
	
    done
    
done
